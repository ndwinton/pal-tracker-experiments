buildscript {
    ext {
        springBootVersion = "2.0.6.RELEASE"
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
    }
}


plugins {
    id "java"
}

apply plugin: 'org.springframework.boot'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-jdbc:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-actuator:$springBootVersion")
    compile("com.oracle:ojdbc8:18.3")
    compile("org.jdbi:jdbi3-core:3.8.2")
    testCompile("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
    testCompile("org.mockito:mockito-core:2.23.4")

}

springBoot {
    buildInfo()
}

def developmentDbUrl = "jdbc:oracle:thin:tracker_dev/tracker_dev@localhost:1521/XEPDB1"
bootRun.environment([
        "WELCOME_MESSAGE": "hello",
        "SPRING_DATASOURCE_URL": developmentDbUrl,
        "MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE": "*",
        "MANAGEMENT_ENDPOINT_HEALTH_SHOWDETAILS": "always",
])

def testDbUrl = "jdbc:oracle:thin:tracker_test/tracker_test@localhost:1521/XEPDB1"
test.environment([
        "WELCOME_MESSAGE": "Hello from test",
        "SPRING_DATASOURCE_URL": testDbUrl,
        "MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE": "*",
        "MANAGEMENT_ENDPOINT_HEALTH_SHOWDETAILS": "always",
])
